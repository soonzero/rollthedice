{"ast":null,"code":"var _jsxFileName = \"/Users/seiyoungkeum/Desktop/soonzero/dev/scrimba/rollthedice/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Die from \"./Die\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [dice, setDice] = React.useState(allNewDice());\n\n  function makeNewDice() {\n    return {\n      id: i + 1,\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false\n    };\n  }\n\n  function allNewDice() {\n    const newDice = [];\n\n    for (let i = 0; i < 10; i++) {\n      newDice.push(makeNewDice());\n    }\n\n    return newDice;\n  }\n\n  function rollDice() {\n    setDice(oldDice => oldDice.map(dice => {\n      return dice.isHeld ? dice : { ...dice,\n        value: Math.ceil(Math.random() * 6)\n      };\n    }));\n  }\n\n  function holdDice(id) {\n    setDice(oldDice => oldDice.map(dice => {\n      if (dice.id == id) {\n        return { ...dice,\n          isHeld: !dice.isHeld\n        };\n      } else {\n        return dice;\n      }\n    }));\n  }\n\n  const diceElements = dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n    value: die.value,\n    isHeld: die.isHeld,\n    onClick: () => holdDice(die.id)\n  }, die.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-container\",\n      children: diceElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"roll-dice\",\n      onClick: rollDice,\n      children: \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"FBcbDbTSXYNs4QNsRKPH911OvUI=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/seiyoungkeum/Desktop/soonzero/dev/scrimba/rollthedice/src/App.js"],"names":["React","Die","App","dice","setDice","useState","allNewDice","makeNewDice","id","i","value","Math","ceil","random","isHeld","newDice","push","rollDice","oldDice","map","holdDice","diceElements","die"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,aAAP;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,KAAK,CAACK,QAAN,CAAeC,UAAU,EAAzB,CAAxB;;AAEA,WAASC,WAAT,GAAuB;AACrB,WAAO;AACLC,MAAAA,EAAE,EAAEC,CAAC,GAAG,CADH;AAELC,MAAAA,KAAK,EAAEC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,CAA1B,CAFF;AAGLC,MAAAA,MAAM,EAAE;AAHH,KAAP;AAKD;;AAED,WAASR,UAAT,GAAsB;AACpB,UAAMS,OAAO,GAAG,EAAhB;;AACA,SAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BM,MAAAA,OAAO,CAACC,IAAR,CAAaT,WAAW,EAAxB;AACD;;AACD,WAAOQ,OAAP;AACD;;AAED,WAASE,QAAT,GAAoB;AAClBb,IAAAA,OAAO,CAAEc,OAAD,IACNA,OAAO,CAACC,GAAR,CAAahB,IAAD,IAAU;AACpB,aAAOA,IAAI,CAACW,MAAL,GACHX,IADG,GAEH,EAAE,GAAGA,IAAL;AAAWO,QAAAA,KAAK,EAAEC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,CAA1B;AAAlB,OAFJ;AAGD,KAJD,CADK,CAAP;AAOD;;AAED,WAASO,QAAT,CAAkBZ,EAAlB,EAAsB;AACpBJ,IAAAA,OAAO,CAAEc,OAAD,IACNA,OAAO,CAACC,GAAR,CAAahB,IAAD,IAAU;AACpB,UAAIA,IAAI,CAACK,EAAL,IAAWA,EAAf,EAAmB;AACjB,eAAO,EACL,GAAGL,IADE;AAELW,UAAAA,MAAM,EAAE,CAACX,IAAI,CAACW;AAFT,SAAP;AAID,OALD,MAKO;AACL,eAAOX,IAAP;AACD;AACF,KATD,CADK,CAAP;AAYD;;AAED,QAAMkB,YAAY,GAAGlB,IAAI,CAACgB,GAAL,CAAUG,GAAD,iBAC5B,QAAC,GAAD;AAEE,IAAA,KAAK,EAAEA,GAAG,CAACZ,KAFb;AAGE,IAAA,MAAM,EAAEY,GAAG,CAACR,MAHd;AAIE,IAAA,OAAO,EAAE,MAAMM,QAAQ,CAACE,GAAG,CAACd,EAAL;AAJzB,KACOc,GAAG,CAACd,EADX;AAAA;AAAA;AAAA;AAAA,UADmB,CAArB;AASA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBAAiCa;AAAjC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAEJ,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA7DuBf,G;;KAAAA,G","sourcesContent":["import React from \"react\";\nimport Die from \"./Die\";\nimport \"./style.css\";\n\nexport default function App() {\n  const [dice, setDice] = React.useState(allNewDice());\n\n  function makeNewDice() {\n    return {\n      id: i + 1,\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n    };\n  }\n\n  function allNewDice() {\n    const newDice = [];\n    for (let i = 0; i < 10; i++) {\n      newDice.push(makeNewDice());\n    }\n    return newDice;\n  }\n\n  function rollDice() {\n    setDice((oldDice) =>\n      oldDice.map((dice) => {\n        return dice.isHeld\n          ? dice\n          : { ...dice, value: Math.ceil(Math.random() * 6) };\n      })\n    );\n  }\n\n  function holdDice(id) {\n    setDice((oldDice) =>\n      oldDice.map((dice) => {\n        if (dice.id == id) {\n          return {\n            ...dice,\n            isHeld: !dice.isHeld,\n          };\n        } else {\n          return dice;\n        }\n      })\n    );\n  }\n\n  const diceElements = dice.map((die) => (\n    <Die\n      key={die.id}\n      value={die.value}\n      isHeld={die.isHeld}\n      onClick={() => holdDice(die.id)}\n    />\n  ));\n\n  return (\n    <main>\n      <div className=\"dice-container\">{diceElements}</div>\n      <button className=\"roll-dice\" onClick={rollDice}>\n        Roll\n      </button>\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}