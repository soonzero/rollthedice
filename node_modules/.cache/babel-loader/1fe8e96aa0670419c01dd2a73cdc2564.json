{"ast":null,"code":"var _jsxFileName = \"/Users/seiyoungkeum/Desktop/soonzero/dev/scrimba/rollthedice/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Die from \"./Die\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [dice, setDice] = React.useState(allNewDice());\n  const [tenzies, setTenzies] = React.useState(false);\n  React.useEffect(() => {\n    const allHeld = dice.every(die => die.isHeld);\n    const firstValue = dice[0].value;\n    const allSameValue = dice.every(die.value === firstValue);\n\n    if (allHeld && allSameValue) {\n      setTenzies(true);\n      console.log(\"You won!\");\n    }\n  }, [dice]);\n\n  function allNewDice() {\n    const newDice = [];\n\n    for (let i = 0; i < 10; i++) {\n      newDice.push({\n        id: i + 1,\n        value: Math.ceil(Math.random() * 6),\n        isHeld: false\n      });\n    }\n\n    return newDice;\n  }\n\n  function rollDice() {\n    setDice(oldDice => oldDice.map(dice => {\n      return dice.isHeld ? dice : { ...dice,\n        value: Math.ceil(Math.random() * 6)\n      };\n    }));\n  }\n\n  function holdDice(id) {\n    setDice(oldDice => oldDice.map(dice => {\n      if (dice.id == id) {\n        return { ...dice,\n          isHeld: !dice.isHeld\n        };\n      } else {\n        return dice;\n      }\n    }));\n  }\n\n  const diceElements = dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n    value: die.value,\n    isHeld: die.isHeld,\n    onClick: () => holdDice(die.id)\n  }, die.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Tenzies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: [\"Roll until all dice are the same. Click each die \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 58\n      }, this), \"to freeze it at its current value between rolls.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-container\",\n      children: diceElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"roll-dice\",\n      onClick: rollDice,\n      children: \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mBhM4pmDk1UgsaV8K35tBPcmDjA=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/seiyoungkeum/Desktop/soonzero/dev/scrimba/rollthedice/src/App.js"],"names":["React","Die","App","dice","setDice","useState","allNewDice","tenzies","setTenzies","useEffect","allHeld","every","die","isHeld","firstValue","value","allSameValue","console","log","newDice","i","push","id","Math","ceil","random","rollDice","oldDice","map","holdDice","diceElements"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Die from \"./Die\";\nimport \"./style.css\";\n\nexport default function App() {\n  const [dice, setDice] = React.useState(allNewDice());\n  const [tenzies, setTenzies] = React.useState(false);\n\n  React.useEffect(() => {\n    const allHeld = dice.every((die) => die.isHeld);\n    const firstValue = dice[0].value;\n    const allSameValue = dice.every(die.value === firstValue);\n    if (allHeld && allSameValue) {\n      setTenzies(true);\n      console.log(\"You won!\");\n    }\n  }, [dice]);\n\n  function allNewDice() {\n    const newDice = [];\n    for (let i = 0; i < 10; i++) {\n      newDice.push({\n        id: i + 1,\n        value: Math.ceil(Math.random() * 6),\n        isHeld: false,\n      });\n    }\n    return newDice;\n  }\n\n  function rollDice() {\n    setDice((oldDice) =>\n      oldDice.map((dice) => {\n        return dice.isHeld\n          ? dice\n          : { ...dice, value: Math.ceil(Math.random() * 6) };\n      })\n    );\n  }\n\n  function holdDice(id) {\n    setDice((oldDice) =>\n      oldDice.map((dice) => {\n        if (dice.id == id) {\n          return {\n            ...dice,\n            isHeld: !dice.isHeld,\n          };\n        } else {\n          return dice;\n        }\n      })\n    );\n  }\n\n  const diceElements = dice.map((die) => (\n    <Die\n      key={die.id}\n      value={die.value}\n      isHeld={die.isHeld}\n      onClick={() => holdDice(die.id)}\n    />\n  ));\n\n  return (\n    <main>\n      <h1 className=\"title\">Tenzies</h1>\n      <p className=\"instructions\">\n        Roll until all dice are the same. Click each die <br />\n        to freeze it at its current value between rolls.\n      </p>\n      <div className=\"dice-container\">{diceElements}</div>\n      <button className=\"roll-dice\" onClick={rollDice}>\n        Roll\n      </button>\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}