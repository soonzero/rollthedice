[{"/Users/seiyoungkeum/Desktop/soonzero/dev/scrimba/rollthedice/src/index.js":"1","/Users/seiyoungkeum/Desktop/soonzero/dev/scrimba/rollthedice/src/App.js":"2","/Users/seiyoungkeum/Desktop/soonzero/dev/scrimba/rollthedice/src/Die.js":"3"},{"size":146,"mtime":1642832602480,"results":"4","hashOfConfig":"5"},{"size":1968,"mtime":1642856134805,"results":"6","hashOfConfig":"5"},{"size":295,"mtime":1642839395069,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r6thnt",{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"/Users/seiyoungkeum/Desktop/soonzero/dev/scrimba/rollthedice/src/index.js",[],"/Users/seiyoungkeum/Desktop/soonzero/dev/scrimba/rollthedice/src/App.js",["16"],"import React from \"react\";\nimport Die from \"./Die\";\nimport \"./style.css\";\nimport Confetti from \"react-confetti\";\n\nexport default function App() {\n  const [dice, setDice] = React.useState(allNewDice());\n  const [tenzies, setTenzies] = React.useState(false);\n\n  React.useEffect(() => {\n    const allHeld = dice.every((die) => die.isHeld);\n    const firstValue = dice[0].value;\n    const allSameValue = dice.every((die) => die.value === firstValue);\n    if (allHeld && allSameValue) {\n      setTenzies(true);\n    }\n  }, [dice]);\n\n  function allNewDice() {\n    const newDice = [];\n    for (let i = 0; i < 10; i++) {\n      newDice.push({\n        id: i + 1,\n        value: Math.ceil(Math.random() * 6),\n        isHeld: false,\n      });\n    }\n    return newDice;\n  }\n\n  function rollDice() {\n    if (!tenzies) {\n      setDice((oldDice) =>\n        oldDice.map((dice) => {\n          return dice.isHeld\n            ? dice\n            : { ...dice, value: Math.ceil(Math.random() * 6) };\n        })\n      );\n    } else {\n      setDice(allNewDice());\n      setTenzies(false);\n    }\n  }\n\n  function holdDice(id) {\n    setDice((oldDice) =>\n      oldDice.map((dice) => {\n        if (dice.id == id) {\n          return {\n            ...dice,\n            isHeld: !dice.isHeld,\n          };\n        } else {\n          return dice;\n        }\n      })\n    );\n  }\n\n  const diceElements = dice.map((die) => (\n    <Die\n      key={die.id}\n      value={die.value}\n      isHeld={die.isHeld}\n      onClick={() => holdDice(die.id)}\n    />\n  ));\n\n  return (\n    <main>\n      {tenzies && <Confetti />}\n      <h1 className=\"title\">Tenzies</h1>\n      <p className=\"instructions\">\n        Roll until all dice are the same. Click each die <br />\n        to freeze it at its current value between rolls.\n      </p>\n      <div className=\"dice-container\">{diceElements}</div>\n      <button className=\"roll-dice\" onClick={rollDice}>\n        {tenzies ? \"New Game\" : \"Roll\"}\n      </button>\n    </main>\n  );\n}\n","/Users/seiyoungkeum/Desktop/soonzero/dev/scrimba/rollthedice/src/Die.js",[],["17","18"],{"ruleId":"19","severity":1,"message":"20","line":49,"column":21,"nodeType":"21","messageId":"22","endLine":49,"endColumn":23},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["27"],"no-negated-in-lhs",["28"],"no-global-assign","no-unsafe-negation"]